; ====================================================================
; ----------------------------------------------------------------
; MD code (at $FF0000)
; ----------------------------------------------------------------

; ====================================================================
; ------------------------------------------------------
; Global RAM
; ------------------------------------------------------

		struct RAM_MdGlobal
RAM_MdGlbExmpl	ds.w 1
sizeof_mdglbl	ds.l 0
		finish

; ====================================================================
; ------------------------------------------------------
; Variables
; ------------------------------------------------------

Var_example	equ	1234

; ====================================================================
; ------------------------------------------------------
; Structs
; ------------------------------------------------------

; 		struct 0
; strc_xpos	ds.w 1
; strc_ypos	ds.w 1
; 		finish

; ====================================================================
; ------------------------------------------------------
; RAM for current screen mode
; ------------------------------------------------------

; 		struct RAM_ModeBuff
; GmMode0_long	ds.l 1
; GmMode0_word	ds.w 1
; GmMode0_byte	ds.b 1
; 		finish

; ====================================================================
; --------------------------------------------------------
; Include system features
; --------------------------------------------------------

		include	"system/md/system.asm"
		include	"system/md/video.asm"
		include	"system/md/sound.asm"

; ====================================================================
; --------------------------------------------------------
; Initialize system
; --------------------------------------------------------

MD_Main:
		bsr 	Sound_init
		bsr 	Video_init
		bsr	System_Init
		
; ====================================================================
; ------------------------------------------------------
; Code start
; ------------------------------------------------------
	
		move.w	#$2700,sr
		bsr	Mode_Init
		bsr	Video_PrintInit
		bset	#bitDispEnbl,(RAM_VdpRegs+1).l		; Enable display
		bsr	Video_Update

; ====================================================================
; ------------------------------------------------------
; Loop
; ------------------------------------------------------

		lea	(sysmars_reg),a0
		move.w	#1,comm14(a0)
		
.loop:
		bsr	System_VSync
; 		move.w	(Controller_1+on_hold),d1
; 		move.w	d1,d0
; 		btst	#bitJoyC,d1
; 		beq.s	.no_press


		lea	(sysmars_reg),a0
		move.w	comm12(a0),d0
		bne.s	.no_press
		move.w	#1,comm12(a0)
		move.w	comm14(a0),d0
		bne.s	.no_press
		move.w	#1,comm14(a0)
.no_press:

		lea	str_Title(pc),a0
		move.l	#locate(0,0,26),d0
		bsr	Video_Print
		bra	.loop
		
; ====================================================================
; ------------------------------------------------------
; Subroutines
; ------------------------------------------------------

; ====================================================================
; ------------------------------------------------------
; Interrupts
; ------------------------------------------------------

; --------------------------------------------------
; Custom VBlank
; --------------------------------------------------

; --------------------------------------------------
; Custom HBlank
; --------------------------------------------------

; ====================================================================
; ------------------------------------------------------
; DATA
; 
; short stuff goes here
; ------------------------------------------------------

		align 2
str_Title:	dc.b "\\w \\w \\w \\w",$A
		dc.b "\\w \\w \\w \\w         MD: \\l",0
		dc.l sysmars_reg+comm0
		dc.l sysmars_reg+comm2
		dc.l sysmars_reg+comm4
		dc.l sysmars_reg+comm6
		dc.l sysmars_reg+comm8
		dc.l sysmars_reg+comm10
		dc.l sysmars_reg+comm12
		dc.l sysmars_reg+comm14
		dc.l RAM_FrameCount
		align 4
